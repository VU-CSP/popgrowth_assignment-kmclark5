{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/VU-CSP/popgrowth_assignment-kmclark5/blob/main/KC_Updated_2.27.22_HW_2_PopGrowthLecture_assignment.ipynb_KC\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "03994108-9a10-4b4c-b4bf-0a48f6d1c023",
      "metadata": {
        "id": "03994108-9a10-4b4c-b4bf-0a48f6d1c023"
      },
      "source": [
        "# Analysis of Cell Proliferation\n",
        "## Objectives\n",
        "This notebook has sections designed to:\n",
        "1) Provide background on cell proliferation  \n",
        "2) Describe basic mathematical models of population growth  \n",
        "3) Analyze dynamic cell count data  \n",
        "4) Perform linear and nonlinear regression of models fit to cell count data  \n",
        "5) Create functions in Python to perform calcuations \n",
        "\n",
        "## Cell proliferation\n",
        "### Nomenclature\n",
        "* _Growth_ can mean an increase in mass or volume (at the individual level)\n",
        "* _Growth_ can also indicate an increase in population size (e.g. the number of cells in a tumor)\n",
        "* _Proliferation_ generally refers to change in the number of individuals within a group (e.g. exponential population growth)\n",
        "* _Tumor growth_ generally refers to the size of the tumor, but an increase in the number of tumor cells is implicit\n",
        "\n",
        "### Typical assays of proliferation, survival and death\n",
        "* Usually performed to test effects of perturbation (e.g. a drug)  \n",
        "* Most are static assays (take a snapshot)  \n",
        "* Multiple measurements require multiple samples (since they are destructive)  \n",
        "* Typically reported as fraction of control or percent change (relative, not absolute metrics)  \n",
        "* Biomarkers of the processes that change cell population size  \n",
        "\n",
        "Images below are representatives of 1) fluorescence microscopy of calcein/propidium iodide stained cells, 2) flow cytometry of cells stained with FxCycle violet and phospho-histone H3, 3) fluorescence microscopy of annexin A5-fluorescein-stained cells and 4) fluorescence microscopy of cells after addition of caspase 3 substrate that becomes fluorogenic upon cleavage by caspase 3 (pink).  \n",
        "\n",
        "\n",
        "\n",
        "<table>\n",
        "    <tr>\n",
        "      <td>\n",
        "      <img src=\"https://github.com/VU-CSP/quantbio-assignments/blob/main/img/calcein-PI.png?raw=1\" style=\"width: 200px;\" />\n",
        "      </td>\n",
        "      <td>\n",
        "      <img src=\"https://github.com/VU-CSP/quantbio-assignments/blob/main/img/flow-mitosis.png?raw=1\" style=\"width: 200px;\" />\n",
        "      </td>\n",
        "      <td>\n",
        "      <img src=\"https://github.com/VU-CSP/quantbio-assignments/blob/main/img/Anx5.png?raw=1\" style=\"width: 200px;\" />\n",
        "      </td>\n",
        "      <td>\n",
        "      <img src=\"https://github.com/VU-CSP/quantbio-assignments/blob/main/img/activeCasp3.png?raw=1\" style=\"width: 200px;\" />\n",
        "      </td>\n",
        "     </tr>\n",
        "</table>"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "7ac8861e-0e5d-4d2f-b442-238f48bafd7d",
      "metadata": {
        "id": "7ac8861e-0e5d-4d2f-b442-238f48bafd7d"
      },
      "source": [
        "### Exponential growth\n",
        "#### _A math refresher_\n",
        "<img src=\"https://github.com/VU-CSP/quantbio-assignments/blob/main/img/Math-ugh.png?raw=1\" style=\"width: 500px;\"/>\n",
        "\n",
        "* Definition of Logarithm: $log_e e^x = x$, where $e > 0$ and $e â‰  1$   \n",
        "* Product Rule: $log(xy) = log(x) + log(y)$\n",
        "* Base change rule: $log_a(n) = log_b(n)/log_a(b)$  \n",
        "\n",
        "#### **Exponential growth equation**\n",
        "$P(t) = P_0e^{at}$, where  \n",
        "$P(t)$ is the population size at time = $t$,  \n",
        "$P_0$ is initial population size, and  \n",
        "$a$ is the growth rate constant.\n",
        "\n",
        "_The logarithm of the growth equation is linear_  \n",
        "$log_e P(t) = log_e P_0e^{at} = log_e P_0 + log_e e^{at} = log_e P_0 + at$  \n",
        "\n",
        "_(reorganizing to the form of $y = ax + b$)_  \n",
        "$log_e P(t) = at + log_e P_0$, where,  \n",
        "growth rate = $a$ = _slope of the line_ and log of initial population size = _y intercept_   \n",
        "\n",
        "##### **This means that you can fit exponentially growing population data with linear models**\n",
        "\n",
        "This also works in log2 scale using a population doubling function:  \n",
        "$P(t) = P_02^{at}$,  \n",
        "which allows for an easier biological interpretation."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "25b229c6-432b-4d6c-9979-0f67c3246d34",
      "metadata": {
        "id": "25b229c6-432b-4d6c-9979-0f67c3246d34"
      },
      "source": [
        "## Plotting and interpreting cell population growth data\n",
        "These graphs were previously generated and are shown for reference. Data are shown in linear, log2 and normalized log2 scales. Lines shown on log2 and normalized log2 plots represent linear model fits and the slope (proliferation rate) and doubling time (1/proliferation rate) parameters of the optimal model fit are shown.  \n",
        "\n",
        "<img src=\"https://github.com/VU-CSP/quantbio-assignments/blob/main/img/pop_growth_difft_scales.png?raw=1\" style=\"width: 800px;\" />\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "f5d5336f-8a1c-4beb-adc0-6ba4e0b63804",
      "metadata": {
        "id": "f5d5336f-8a1c-4beb-adc0-6ba4e0b63804"
      },
      "source": [
        "### Divergence from exponential growth\n",
        "There are numerous conditions that result in non-exponential cell population growth, for example, when cells fill in their available space (a.k.a. contact inhibition).  \n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "095e56de",
      "metadata": {
        "id": "095e56de"
      },
      "source": [
        "<img src=\"https://github.com/VU-CSP/quantbio-assignments/blob/main/img/contact_inhibition.png?raw=1\" style=\"width: 300px;\"/>  "
      ]
    },
    {
      "cell_type": "markdown",
      "id": "bcafe3ca",
      "metadata": {
        "id": "bcafe3ca"
      },
      "source": [
        "There are some specific models that have been used to model growth inhibition, including the \n",
        "**Logistic** and **Gompertz** functions.  \n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "fa4c4a18-c3cc-47ea-9e68-5f468497ff94",
      "metadata": {
        "id": "fa4c4a18-c3cc-47ea-9e68-5f468497ff94"
      },
      "source": [
        "<img src=\"https://github.com/VU-CSP/quantbio-assignments/blob/main/img/evidence_for_Gompertz_tumors.png?raw=1\" style=\"width: 800px;\"/>  \n",
        "<img src=\"https://github.com/VU-CSP/quantbio-assignments/blob/main/img/logistic_growth_model.jpeg?raw=1\" style=\"width: 800px;\"/>  \n",
        "<img src=\"https://github.com/VU-CSP/quantbio-assignments/blob/main/img/gompertz_growth_model.jpeg?raw=1\" style=\"width: 800px;\"/>  \n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ec305d36-2c3b-4d52-b806-054b615a84f7",
      "metadata": {
        "id": "ec305d36-2c3b-4d52-b806-054b615a84f7"
      },
      "source": [
        "_We will do some exploratory data analysis of a small cell count data set to interpret how populations of cells grow in culture._\n",
        "-----"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "40e0a719-37e3-4a84-8668-769a294dd293",
      "metadata": {
        "id": "40e0a719-37e3-4a84-8668-769a294dd293"
      },
      "source": [
        "### First, import necessary Python packages"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "id": "549f8f33-de74-4ddd-9645-22a758ea2814",
      "metadata": {
        "id": "549f8f33-de74-4ddd-9645-22a758ea2814"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "import os"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "Sfrp0w8cysS1",
      "metadata": {
        "id": "Sfrp0w8cysS1"
      },
      "source": [
        "See whether we are running in Google Colab or not."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "id": "CLSZT8xMyphI",
      "metadata": {
        "id": "CLSZT8xMyphI"
      },
      "outputs": [],
      "source": [
        "try:\n",
        "  import google.colab\n",
        "  IN_COLAB = True\n",
        "except:\n",
        "  IN_COLAB = False"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ad299e4b-bd09-40c9-93ce-a8959d76a375",
      "metadata": {
        "id": "ad299e4b-bd09-40c9-93ce-a8959d76a375"
      },
      "source": [
        "### Load custom functions\n",
        "File name `growth_fxns.py` includes functions for:  \n",
        "* flattening a matrix (nested lists): `flatten_matrix`  \n",
        "* stochastic simulation of exponential growth: `gillespie_growth`  \n",
        "* deterministic solution of exponential growth: `exp_growth`  \n",
        "    \n",
        "* deterministic solution of logistic growth: `mylogistic`\n",
        "* deterministic solution of Gompertzian growth: `gompertz`\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "id": "c72e3dc2-f48c-447a-95de-f428c2f6b3da",
      "metadata": {
        "id": "c72e3dc2-f48c-447a-95de-f428c2f6b3da",
        "outputId": "3cb5d5d4-0fff-46c4-8457-97a58f5907ae",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2023-02-27 20:09:43--  https://raw.githubusercontent.com/VU-CSP/quantbio-assignments/main/growth_fxns.py\n",
            "Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n",
            "Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 2307 (2.3K) [text/plain]\n",
            "Saving to: â€˜growth_fxns.pyâ€™\n",
            "\n",
            "\rgrowth_fxns.py        0%[                    ]       0  --.-KB/s               \rgrowth_fxns.py      100%[===================>]   2.25K  --.-KB/s    in 0s      \n",
            "\n",
            "2023-02-27 20:09:43 (44.8 MB/s) - â€˜growth_fxns.pyâ€™ saved [2307/2307]\n",
            "\n"
          ]
        }
      ],
      "source": [
        "if IN_COLAB and not os.path.exists(\"growth_fxns.py\"):\n",
        "    !wget \"https://raw.githubusercontent.com/VU-CSP/quantbio-assignments/main/growth_fxns.py\"\n",
        "from growth_fxns import *"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "95fd8d3f-61c2-463d-8b01-1e961269af9c",
      "metadata": {
        "id": "95fd8d3f-61c2-463d-8b01-1e961269af9c"
      },
      "source": [
        "### Adjust seaborn plot settings\n",
        "_To make the graphics prettier._ You can learn more about seaborn at the [seaborn website]()  "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "id": "f28ff5a6-dc57-4fe3-a49f-d448f8bbc226",
      "metadata": {
        "id": "f28ff5a6-dc57-4fe3-a49f-d448f8bbc226"
      },
      "outputs": [],
      "source": [
        "sns.set_context(\"notebook\", font_scale=1.5, rc={\"lines.linewidth\": 2.5})"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "fb6587a1-2b3d-4aaf-ad96-c50e6eb7547a",
      "metadata": {
        "id": "fb6587a1-2b3d-4aaf-ad96-c50e6eb7547a"
      },
      "source": [
        "#### Load a small dataset\n",
        "Data from multiwell plate of cells, some of which have been treated with a drug."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "id": "5ffdbde1-987c-4817-9487-288cce2d3509",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 403
        },
        "id": "5ffdbde1-987c-4817-9487-288cce2d3509",
        "outputId": "84ba8a85-2adc-4b14-f059-29ea64121620"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2023-02-27 20:09:43--  https://raw.githubusercontent.com/VU-CSP/quantbio-assignments/main/MCF10A_trametinib.csv\n",
            "Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n",
            "Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 13490 (13K) [text/plain]\n",
            "Saving to: â€˜MCF10A_trametinib.csvâ€™\n",
            "\n",
            "MCF10A_trametinib.c 100%[===================>]  13.17K  --.-KB/s    in 0s      \n",
            "\n",
            "2023-02-27 20:09:43 (80.4 MB/s) - â€˜MCF10A_trametinib.csvâ€™ saved [13490/13490]\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  well  time  cell.count            uid       drug1  drug1.conc\n",
              "0  A01   0.8          32  10ACh-28A_H03  trametinib    0.000004\n",
              "1  A01   5.6          25  10ACh-28A_H03  trametinib    0.000004\n",
              "2  A01  10.5          31  10ACh-28A_H03  trametinib    0.000004\n",
              "3  A01  15.3          53  10ACh-28A_H03  trametinib    0.000004\n",
              "4  A01  20.0          39  10ACh-28A_H03  trametinib    0.000004"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-eceec64b-01a2-4e58-aeb6-cbaf9710f31b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>well</th>\n",
              "      <th>time</th>\n",
              "      <th>cell.count</th>\n",
              "      <th>uid</th>\n",
              "      <th>drug1</th>\n",
              "      <th>drug1.conc</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>A01</td>\n",
              "      <td>0.8</td>\n",
              "      <td>32</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A01</td>\n",
              "      <td>5.6</td>\n",
              "      <td>25</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A01</td>\n",
              "      <td>10.5</td>\n",
              "      <td>31</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A01</td>\n",
              "      <td>15.3</td>\n",
              "      <td>53</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A01</td>\n",
              "      <td>20.0</td>\n",
              "      <td>39</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eceec64b-01a2-4e58-aeb6-cbaf9710f31b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-eceec64b-01a2-4e58-aeb6-cbaf9710f31b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-eceec64b-01a2-4e58-aeb6-cbaf9710f31b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ],
      "source": [
        "if IN_COLAB and not os.path.exists(\"MCF10A_trametinib.csv\"):\n",
        "    !wget \"https://raw.githubusercontent.com/VU-CSP/quantbio-assignments/main/MCF10A_trametinib.csv\"\n",
        "d = pd.read_csv(\"MCF10A_trametinib.csv\")\n",
        "d.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "4ee5278b-1d1e-4427-a596-8151c61ead1a",
      "metadata": {
        "id": "4ee5278b-1d1e-4427-a596-8151c61ead1a"
      },
      "source": [
        "### Add new columns\n",
        "Add values for log2(cell.count) (`l2`) and population doublings (`pd`). Calculating log2 values are easy since it is calculated directly from the `cell.count` values. Population doublings must be normalized for each well independently. To better understand each step, try to pull out the code in smaller chunks and run them in different cells."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "id": "4312e53f-babd-475b-91c0-a20cc04b03c1",
      "metadata": {
        "id": "4312e53f-babd-475b-91c0-a20cc04b03c1"
      },
      "outputs": [],
      "source": [
        "d.insert(2,\"l2\",np.empty_like(d[\"cell.count\"]))\n",
        "d.insert(3,\"pd\",np.empty_like(d[\"cell.count\"]))\n",
        "d[\"l2\"] = np.round(np.log2(d[\"cell.count\"]),3)\n",
        "d[\"pd\"] = flatten_matrix([np.round(d[d[\"well\"]==w][\"l2\"] - d[d[\"well\"]==w][\"l2\"].to_list()[0],3) for w in d[\"well\"].unique()])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "id": "e1348e04-bfe8-44f4-9069-bc4a277a6e27",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 990
        },
        "id": "e1348e04-bfe8-44f4-9069-bc4a277a6e27",
        "outputId": "6fecef57-352a-4e5a-b708-59dd90979209"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   well   time     l2     pd  cell.count            uid       drug1  \\\n",
              "0   A01    0.8  5.000  0.000          32  10ACh-28A_H03  trametinib   \n",
              "1   A01    5.6  4.644 -0.356          25  10ACh-28A_H03  trametinib   \n",
              "2   A01   10.5  4.954 -0.046          31  10ACh-28A_H03  trametinib   \n",
              "3   A01   15.3  5.728  0.728          53  10ACh-28A_H03  trametinib   \n",
              "4   A01   20.0  5.285  0.285          39  10ACh-28A_H03  trametinib   \n",
              "5   A01   24.8  5.700  0.700          52  10ACh-28A_H03  trametinib   \n",
              "6   A01   29.6  5.615  0.615          49  10ACh-28A_H03  trametinib   \n",
              "7   A01   34.4  5.807  0.807          56  10ACh-28A_H03  trametinib   \n",
              "8   A01   39.2  5.781  0.781          55  10ACh-28A_H03  trametinib   \n",
              "9   A01   44.0  5.700  0.700          52  10ACh-28A_H03  trametinib   \n",
              "10  A01   48.8  5.585  0.585          48  10ACh-28A_H03  trametinib   \n",
              "11  A01   53.5  5.807  0.807          56  10ACh-28A_H03  trametinib   \n",
              "12  A01   58.3  5.615  0.615          49  10ACh-28A_H03  trametinib   \n",
              "13  A01   63.1  5.555  0.555          47  10ACh-28A_H03  trametinib   \n",
              "14  A01   67.9  5.392  0.392          42  10ACh-28A_H03  trametinib   \n",
              "15  A01   72.7  5.644  0.644          50  10ACh-28A_H03  trametinib   \n",
              "16  A01   76.1  5.358  0.358          41  10ACh-28A_H03  trametinib   \n",
              "17  A01   81.3  5.585  0.585          48  10ACh-28A_H03  trametinib   \n",
              "18  A01   86.4  5.285  0.285          39  10ACh-28A_H03  trametinib   \n",
              "19  A01   91.5  5.555  0.555          47  10ACh-28A_H03  trametinib   \n",
              "20  A01   96.6  5.524  0.524          46  10ACh-28A_H03  trametinib   \n",
              "21  A01  101.7  5.209  0.209          37  10ACh-28A_H03  trametinib   \n",
              "22  A01  106.8  5.585  0.585          48  10ACh-28A_H03  trametinib   \n",
              "23  A01  111.9  5.285  0.285          39  10ACh-28A_H03  trametinib   \n",
              "24  A01  117.0  5.322  0.322          40  10ACh-28A_H03  trametinib   \n",
              "25  A02    1.0  5.755  0.000          54  10ACh-28B_B23     control   \n",
              "26  A02    5.7  6.044  0.289          66  10ACh-28B_B23     control   \n",
              "27  A02   10.6  6.285  0.530          78  10ACh-28B_B23     control   \n",
              "28  A02   15.4  6.409  0.654          85  10ACh-28B_B23     control   \n",
              "29  A02   20.1  6.755  1.000         108  10ACh-28B_B23     control   \n",
              "\n",
              "    drug1.conc  \n",
              "0     0.000004  \n",
              "1     0.000004  \n",
              "2     0.000004  \n",
              "3     0.000004  \n",
              "4     0.000004  \n",
              "5     0.000004  \n",
              "6     0.000004  \n",
              "7     0.000004  \n",
              "8     0.000004  \n",
              "9     0.000004  \n",
              "10    0.000004  \n",
              "11    0.000004  \n",
              "12    0.000004  \n",
              "13    0.000004  \n",
              "14    0.000004  \n",
              "15    0.000004  \n",
              "16    0.000004  \n",
              "17    0.000004  \n",
              "18    0.000004  \n",
              "19    0.000004  \n",
              "20    0.000004  \n",
              "21    0.000004  \n",
              "22    0.000004  \n",
              "23    0.000004  \n",
              "24    0.000004  \n",
              "25    0.000000  \n",
              "26    0.000000  \n",
              "27    0.000000  \n",
              "28    0.000000  \n",
              "29    0.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-30422f8b-c1de-4e1e-92af-d9f201390036\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>well</th>\n",
              "      <th>time</th>\n",
              "      <th>l2</th>\n",
              "      <th>pd</th>\n",
              "      <th>cell.count</th>\n",
              "      <th>uid</th>\n",
              "      <th>drug1</th>\n",
              "      <th>drug1.conc</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>A01</td>\n",
              "      <td>0.8</td>\n",
              "      <td>5.000</td>\n",
              "      <td>0.000</td>\n",
              "      <td>32</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A01</td>\n",
              "      <td>5.6</td>\n",
              "      <td>4.644</td>\n",
              "      <td>-0.356</td>\n",
              "      <td>25</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A01</td>\n",
              "      <td>10.5</td>\n",
              "      <td>4.954</td>\n",
              "      <td>-0.046</td>\n",
              "      <td>31</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A01</td>\n",
              "      <td>15.3</td>\n",
              "      <td>5.728</td>\n",
              "      <td>0.728</td>\n",
              "      <td>53</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A01</td>\n",
              "      <td>20.0</td>\n",
              "      <td>5.285</td>\n",
              "      <td>0.285</td>\n",
              "      <td>39</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>A01</td>\n",
              "      <td>24.8</td>\n",
              "      <td>5.700</td>\n",
              "      <td>0.700</td>\n",
              "      <td>52</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>A01</td>\n",
              "      <td>29.6</td>\n",
              "      <td>5.615</td>\n",
              "      <td>0.615</td>\n",
              "      <td>49</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>A01</td>\n",
              "      <td>34.4</td>\n",
              "      <td>5.807</td>\n",
              "      <td>0.807</td>\n",
              "      <td>56</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>A01</td>\n",
              "      <td>39.2</td>\n",
              "      <td>5.781</td>\n",
              "      <td>0.781</td>\n",
              "      <td>55</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>A01</td>\n",
              "      <td>44.0</td>\n",
              "      <td>5.700</td>\n",
              "      <td>0.700</td>\n",
              "      <td>52</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>A01</td>\n",
              "      <td>48.8</td>\n",
              "      <td>5.585</td>\n",
              "      <td>0.585</td>\n",
              "      <td>48</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>A01</td>\n",
              "      <td>53.5</td>\n",
              "      <td>5.807</td>\n",
              "      <td>0.807</td>\n",
              "      <td>56</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>A01</td>\n",
              "      <td>58.3</td>\n",
              "      <td>5.615</td>\n",
              "      <td>0.615</td>\n",
              "      <td>49</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>A01</td>\n",
              "      <td>63.1</td>\n",
              "      <td>5.555</td>\n",
              "      <td>0.555</td>\n",
              "      <td>47</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>A01</td>\n",
              "      <td>67.9</td>\n",
              "      <td>5.392</td>\n",
              "      <td>0.392</td>\n",
              "      <td>42</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>A01</td>\n",
              "      <td>72.7</td>\n",
              "      <td>5.644</td>\n",
              "      <td>0.644</td>\n",
              "      <td>50</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>A01</td>\n",
              "      <td>76.1</td>\n",
              "      <td>5.358</td>\n",
              "      <td>0.358</td>\n",
              "      <td>41</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>A01</td>\n",
              "      <td>81.3</td>\n",
              "      <td>5.585</td>\n",
              "      <td>0.585</td>\n",
              "      <td>48</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>A01</td>\n",
              "      <td>86.4</td>\n",
              "      <td>5.285</td>\n",
              "      <td>0.285</td>\n",
              "      <td>39</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>A01</td>\n",
              "      <td>91.5</td>\n",
              "      <td>5.555</td>\n",
              "      <td>0.555</td>\n",
              "      <td>47</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>A01</td>\n",
              "      <td>96.6</td>\n",
              "      <td>5.524</td>\n",
              "      <td>0.524</td>\n",
              "      <td>46</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>A01</td>\n",
              "      <td>101.7</td>\n",
              "      <td>5.209</td>\n",
              "      <td>0.209</td>\n",
              "      <td>37</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>A01</td>\n",
              "      <td>106.8</td>\n",
              "      <td>5.585</td>\n",
              "      <td>0.585</td>\n",
              "      <td>48</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>A01</td>\n",
              "      <td>111.9</td>\n",
              "      <td>5.285</td>\n",
              "      <td>0.285</td>\n",
              "      <td>39</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>A01</td>\n",
              "      <td>117.0</td>\n",
              "      <td>5.322</td>\n",
              "      <td>0.322</td>\n",
              "      <td>40</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.000004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>A02</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.755</td>\n",
              "      <td>0.000</td>\n",
              "      <td>54</td>\n",
              "      <td>10ACh-28B_B23</td>\n",
              "      <td>control</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>A02</td>\n",
              "      <td>5.7</td>\n",
              "      <td>6.044</td>\n",
              "      <td>0.289</td>\n",
              "      <td>66</td>\n",
              "      <td>10ACh-28B_B23</td>\n",
              "      <td>control</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>A02</td>\n",
              "      <td>10.6</td>\n",
              "      <td>6.285</td>\n",
              "      <td>0.530</td>\n",
              "      <td>78</td>\n",
              "      <td>10ACh-28B_B23</td>\n",
              "      <td>control</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>A02</td>\n",
              "      <td>15.4</td>\n",
              "      <td>6.409</td>\n",
              "      <td>0.654</td>\n",
              "      <td>85</td>\n",
              "      <td>10ACh-28B_B23</td>\n",
              "      <td>control</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>A02</td>\n",
              "      <td>20.1</td>\n",
              "      <td>6.755</td>\n",
              "      <td>1.000</td>\n",
              "      <td>108</td>\n",
              "      <td>10ACh-28B_B23</td>\n",
              "      <td>control</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30422f8b-c1de-4e1e-92af-d9f201390036')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-30422f8b-c1de-4e1e-92af-d9f201390036 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-30422f8b-c1de-4e1e-92af-d9f201390036');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "d.head(30)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "56245c23-c8a9-4d8e-ace1-a372b934377f",
      "metadata": {
        "id": "56245c23-c8a9-4d8e-ace1-a372b934377f"
      },
      "source": []
    },
    {
      "cell_type": "markdown",
      "id": "d1222d88-bd97-494f-83c7-658156b50806",
      "metadata": {
        "id": "d1222d88-bd97-494f-83c7-658156b50806"
      },
      "source": [
        "## Assignment task #1\n",
        "Copy and execute a chunk of code from the line assigning values to `d[\"pd\"]`. Describe what you did and the output in the following markup block."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "id": "5c2bb7c4-bb47-4c3b-99b2-70a002d3a163",
      "metadata": {
        "id": "5c2bb7c4-bb47-4c3b-99b2-70a002d3a163",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 833
        },
        "outputId": "36d1ea8f-3d62-4381-f85f-43edd66dfc04"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   well   time   l2   pd  cell.count            uid       drug1  drug1.conc\n",
              "0   A01    1.0  5.0  0.0          32  10ACh-28A_H03  trametinib         0.0\n",
              "1   A01    6.0  5.0 -0.0          25  10ACh-28A_H03  trametinib         0.0\n",
              "2   A01   10.0  5.0 -0.0          31  10ACh-28A_H03  trametinib         0.0\n",
              "3   A01   15.0  6.0  1.0          53  10ACh-28A_H03  trametinib         0.0\n",
              "4   A01   20.0  5.0  0.0          39  10ACh-28A_H03  trametinib         0.0\n",
              "5   A01   25.0  6.0  1.0          52  10ACh-28A_H03  trametinib         0.0\n",
              "6   A01   30.0  6.0  1.0          49  10ACh-28A_H03  trametinib         0.0\n",
              "7   A01   34.0  6.0  1.0          56  10ACh-28A_H03  trametinib         0.0\n",
              "8   A01   39.0  6.0  1.0          55  10ACh-28A_H03  trametinib         0.0\n",
              "9   A01   44.0  6.0  1.0          52  10ACh-28A_H03  trametinib         0.0\n",
              "10  A01   49.0  6.0  1.0          48  10ACh-28A_H03  trametinib         0.0\n",
              "11  A01   54.0  6.0  1.0          56  10ACh-28A_H03  trametinib         0.0\n",
              "12  A01   58.0  6.0  1.0          49  10ACh-28A_H03  trametinib         0.0\n",
              "13  A01   63.0  6.0  1.0          47  10ACh-28A_H03  trametinib         0.0\n",
              "14  A01   68.0  5.0  0.0          42  10ACh-28A_H03  trametinib         0.0\n",
              "15  A01   73.0  6.0  1.0          50  10ACh-28A_H03  trametinib         0.0\n",
              "16  A01   76.0  5.0  0.0          41  10ACh-28A_H03  trametinib         0.0\n",
              "17  A01   81.0  6.0  1.0          48  10ACh-28A_H03  trametinib         0.0\n",
              "18  A01   86.0  5.0  0.0          39  10ACh-28A_H03  trametinib         0.0\n",
              "19  A01   92.0  6.0  1.0          47  10ACh-28A_H03  trametinib         0.0\n",
              "20  A01   97.0  6.0  1.0          46  10ACh-28A_H03  trametinib         0.0\n",
              "21  A01  102.0  5.0  0.0          37  10ACh-28A_H03  trametinib         0.0\n",
              "22  A01  107.0  6.0  1.0          48  10ACh-28A_H03  trametinib         0.0\n",
              "23  A01  112.0  5.0  0.0          39  10ACh-28A_H03  trametinib         0.0\n",
              "24  A01  117.0  5.0  0.0          40  10ACh-28A_H03  trametinib         0.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-769f4f24-9064-4df2-a869-f973b69c01d2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>well</th>\n",
              "      <th>time</th>\n",
              "      <th>l2</th>\n",
              "      <th>pd</th>\n",
              "      <th>cell.count</th>\n",
              "      <th>uid</th>\n",
              "      <th>drug1</th>\n",
              "      <th>drug1.conc</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>A01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>32</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>A01</td>\n",
              "      <td>6.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>25</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>A01</td>\n",
              "      <td>10.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>31</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>A01</td>\n",
              "      <td>15.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>53</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>A01</td>\n",
              "      <td>20.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>39</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>A01</td>\n",
              "      <td>25.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>52</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>A01</td>\n",
              "      <td>30.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>49</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>A01</td>\n",
              "      <td>34.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>56</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>A01</td>\n",
              "      <td>39.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>55</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>A01</td>\n",
              "      <td>44.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>52</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>A01</td>\n",
              "      <td>49.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>48</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>A01</td>\n",
              "      <td>54.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>56</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>A01</td>\n",
              "      <td>58.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>49</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>A01</td>\n",
              "      <td>63.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>47</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>A01</td>\n",
              "      <td>68.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>42</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>A01</td>\n",
              "      <td>73.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>50</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>A01</td>\n",
              "      <td>76.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>41</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>A01</td>\n",
              "      <td>81.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>48</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>A01</td>\n",
              "      <td>86.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>39</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>A01</td>\n",
              "      <td>92.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>47</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>A01</td>\n",
              "      <td>97.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>46</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>A01</td>\n",
              "      <td>102.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>37</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>A01</td>\n",
              "      <td>107.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>48</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>A01</td>\n",
              "      <td>112.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>39</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>A01</td>\n",
              "      <td>117.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>40</td>\n",
              "      <td>10ACh-28A_H03</td>\n",
              "      <td>trametinib</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-769f4f24-9064-4df2-a869-f973b69c01d2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-769f4f24-9064-4df2-a869-f973b69c01d2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-769f4f24-9064-4df2-a869-f973b69c01d2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ],
      "source": [
        "# Add your code here\n",
        "np.round(d[d[\"well\"]==\"A01\"])\n",
        "#I chose this line of code and change one of the wells 'w' to A01 so that it would run properly. specifically, the d['well'] is equal to 0: (==) means\n",
        "#This code is taking the values from column 12, which are the log2 values/data set. \n",
        "#The np.round function is rounding the numeric values to integers since they were float numbers before"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ae735ec1-1f4c-45ff-9290-56c9def398ed",
      "metadata": {
        "id": "ae735ec1-1f4c-45ff-9290-56c9def398ed"
      },
      "source": [
        "* *Put your description of the code in the previous block here.*\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "5b56a147-be3b-4a8d-b833-37357a76d1c5",
      "metadata": {
        "id": "5b56a147-be3b-4a8d-b833-37357a76d1c5"
      },
      "source": [
        "#### Plot data in different scales\n",
        "We will look at a single well (`A02`) of data in linear scale (direct cell counts), log2 scale and as population doublings (log2 scale normalized to 1 cell at the first time point)."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "id": "7adfe491-1870-4265-97e7-24551c6c1569",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        },
        "id": "7adfe491-1870-4265-97e7-24551c6c1569",
        "outputId": "12fae0c6-6d29-457e-a7a0-4a0c25be29de"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x288 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "ss = d[d[\"well\"]==\"A02\"]\n",
        "# names = ['Linear', 'Log2', 'Normalized log2']\n",
        "fig, axs = plt.subplots(figsize=(12, 4))\n",
        "plt.subplot(131)\n",
        "plt.ylabel('Cell number')\n",
        "sns.scatterplot(data=ss, x=\"time\", y=\"cell.count\")\n",
        "plt.subplot(132)\n",
        "plt.ylabel('Log2(cell number)')\n",
        "sns.scatterplot(data=ss, x=\"time\", y=\"l2\")\n",
        "plt.subplot(133)\n",
        "plt.ylabel('Population doublings')\n",
        "sns.scatterplot(data=ss, x=\"time\", y=\"pd\")\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "95a0731e-59a7-4cfb-9087-7f0232c3b0da",
      "metadata": {
        "id": "95a0731e-59a7-4cfb-9087-7f0232c3b0da"
      },
      "source": [
        "#### Look at aggregated data\n",
        "Many seaborn functions will automatically perform the statistical estimation. In the plots below, data will be grouped by `drug1` using the seaborn `hue` argument."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "id": "72a45a3e-b307-43cd-af53-1ac27c02fec0",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 303
        },
        "id": "72a45a3e-b307-43cd-af53-1ac27c02fec0",
        "outputId": "84f1ca7d-1135-4362-9c6f-645f6e9da915"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x288 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "fig, (ax1, ax2, ax3) = plt.subplots(nrows=1, ncols=3, figsize=(12, 4))\n",
        "plt.subplot(131)\n",
        "plt.xlabel('Time (h)')\n",
        "plt.ylabel('Cell number')\n",
        "sns.lineplot(data=d, x=\"time\", y=\"cell.count\", hue=\"drug1\")\n",
        "plt.legend(loc='upper left', fontsize='8')\n",
        "plt.subplot(132)\n",
        "plt.xlabel('Time (h)')\n",
        "plt.ylabel('Log2(cell number)')\n",
        "sns.lineplot(data=d, x=\"time\", y=\"l2\", hue=\"drug1\")\n",
        "plt.legend(loc='upper left', fontsize='8')\n",
        "plt.subplot(133)\n",
        "plt.xlabel('Time (h)')\n",
        "plt.ylabel('Population doublings')\n",
        "sns.lineplot(data=d, x=\"time\", y=\"pd\", hue=\"drug1\")\n",
        "plt.legend(loc='upper left', fontsize='8')\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "aaf8399f-9670-46fc-af7e-fe2cc85ebb88",
      "metadata": {
        "id": "aaf8399f-9670-46fc-af7e-fe2cc85ebb88"
      },
      "source": [
        "The shaded areas represent confidence intervals. Compare the confidence interval between the log2 and normalized log2 plots, especially at time < 100 h."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "154dba49-a823-4eb6-a004-63a9698bb955",
      "metadata": {
        "id": "154dba49-a823-4eb6-a004-63a9698bb955"
      },
      "source": [
        "How many samples of each type are there? Calculate this by counting the number of unique `well`s there are in each group (`drug1`==trametinib or control)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "id": "21c868af-fb1b-4f07-8ef1-6bd912932254",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "21c868af-fb1b-4f07-8ef1-6bd912932254",
        "outputId": "377ce631-2073-4820-b3d4-b40acacc4ecc"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Wells with trametinib treatment: n = 2\n",
            "Control wells: n = 10\n"
          ]
        }
      ],
      "source": [
        "n_tram = len(d[d[\"drug1\"]==\"trametinib\"][\"well\"].unique())\n",
        "n_ctrl = len(d[d[\"drug1\"]!=\"trametinib\"][\"well\"].unique())\n",
        "\n",
        "print(f\"Wells with trametinib treatment: n = {n_tram}\\nControl wells: n = {n_ctrl}\")"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "893b067d-b9d0-47bb-b4e1-7051aa6a3421",
      "metadata": {
        "id": "893b067d-b9d0-47bb-b4e1-7051aa6a3421"
      },
      "source": [
        "#### Look at data by well\n",
        "To see each well of data individually we will set `hue` to color data by `well`."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "id": "fe669618-97e3-4dd6-8b98-74d85ccc42b1",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        },
        "id": "fe669618-97e3-4dd6-8b98-74d85ccc42b1",
        "outputId": "1ceeccd4-485f-4c3c-9cb4-3884bad6da0a"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x288 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "fig, axs = plt.subplots(nrows=1, ncols=3, figsize=(12, 4))\n",
        "plt.subplot(131)\n",
        "plt.xlabel('Time (h)')\n",
        "plt.ylabel('Cell number')\n",
        "sns.lineplot(data=d, x=\"time\", y=\"cell.count\", hue=\"well\")\n",
        "plt.legend(loc='upper left', fontsize='8')\n",
        "plt.subplot(132)\n",
        "plt.xlabel('Time (h)')\n",
        "plt.ylabel('Log2(cell number)')\n",
        "sns.lineplot(data=d, x=\"time\", y=\"l2\", hue=\"well\")\n",
        "plt.legend(loc='upper left', fontsize='8')\n",
        "plt.subplot(133)\n",
        "plt.xlabel('Time (h)')\n",
        "plt.ylabel('Population doublings')\n",
        "sns.lineplot(data=d, x=\"time\", y=\"pd\", hue=\"well\")\n",
        "plt.legend(loc='upper left', fontsize='8')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "b70a0be3-611d-425c-8f75-14e1b9c5588d",
      "metadata": {
        "id": "b70a0be3-611d-425c-8f75-14e1b9c5588d"
      },
      "source": [
        "How well do the individual lines reflect your expectations from the aggregated data with confidence intervals? Do any wells clearly stand out? Let's look only at wells A04, A05 and A07 in log2 scale and visualize each individual data point using `scatterplot`."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "id": "b0458a96-3200-4988-a61c-0c44aec6b0d4",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 316
        },
        "id": "b0458a96-3200-4988-a61c-0c44aec6b0d4",
        "outputId": "ab2b0968-9d38-4059-fc82-b3af0efc245c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7f866662c430>"
            ]
          },
          "metadata": {},
          "execution_count": 13
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "# dtp = data to plot\n",
        "dtp = d[(d[\"well\"] == \"A04\") | (d[\"well\"] == \"A05\") | (d[\"well\"] == \"A07\")]\n",
        "sns.scatterplot(data=dtp, x=\"time\", y=\"l2\", hue=\"well\")\n",
        "plt.legend(loc='upper left', fontsize='8')"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "759f0e12-f434-48d4-a846-598badd68e64",
      "metadata": {
        "id": "759f0e12-f434-48d4-a846-598badd68e64"
      },
      "source": [
        "## Assignment task #2\n",
        "Generate a scatterplot of population doublings over time for the same wells as the block above (wells A04, A05 and A07). Describe the difference you see between the new graph and the graph of data in log2 scale."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "id": "b22f7170-76bc-42c9-af8e-fd623469b30c",
      "metadata": {
        "id": "b22f7170-76bc-42c9-af8e-fd623469b30c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 316
        },
        "outputId": "0def6cdf-5571-4405-a834-1581ad0a9817"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7f8664cdd970>"
            ]
          },
          "metadata": {},
          "execution_count": 14
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "# Add your code for scatterplot of population doublings here\n",
        "#Reran the code and changed the y=pd, instead of y=12\n",
        "dtp = d[(d[\"well\"] == \"A04\") | (d[\"well\"] == \"A05\") | (d[\"well\"] == \"A07\")]\n",
        "sns.scatterplot(data=dtp, x=\"time\", y=\"pd\", hue=\"well\")\n",
        "plt.legend(loc='upper left', fontsize='8')\n",
        "\n",
        "#Some differences I have observed in the Log2 graph is all three wells (A04, A05, A07) generally are gradually increasing with separation betweens the three wells with A04 having the fastest and most exponential growth out of the three wells. \n",
        "#Whereas for the new graph I changed the y=12 to y=pd that all three wells are stacked on one another until A05 plateaus while A04 and A07 keep growing in a upwards slope fashion "
      ]
    },
    {
      "cell_type": "markdown",
      "id": "cad14622-98de-4521-9cc7-8c6b01c7c583",
      "metadata": {
        "id": "cad14622-98de-4521-9cc7-8c6b01c7c583"
      },
      "source": [
        "*Describe your comparison of the data shown in log2 (`l2`) and normalized log2 (`pd`).*\n",
        "\n",
        "####Some differences I have observed in the Log2 graph is all three wells (A04, A05, A07) generally are gradually increasing with separation betweens the three wells with A04 having the fastest and most exponential growth out of the three wells \n",
        "####Whereas for the new graph I changed the y=12 to y=pd that all three wells are stacked on one another until A05 plateaus while A04 and A07 keep growing in a upwards slope fashion \n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "b2ad573a-5ba5-4e3a-a6c3-eebc3730e83d",
      "metadata": {
        "id": "b2ad573a-5ba5-4e3a-a6c3-eebc3730e83d"
      },
      "source": [
        "Apart from visually inspecting the data, we should use model fitting to extract parameter values that can help us interpret the data quantitatively."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "52ab9eb0-8019-4f34-8a94-f095019df421",
      "metadata": {
        "id": "52ab9eb0-8019-4f34-8a94-f095019df421"
      },
      "source": [
        "## Model fitting\n",
        "### Use SciPy's `linregress` function or Seaborn's `lmplot` function\n",
        "Because an exponential growth rate is directly proportional to the log of the number of components (i.e., cells), we can fit each well of data independently with a linear model to help interpret the data. Linear models are easy to fit and fitting functions are commonly provided by many different Python packages. We will find optimum parameters using two different packages: [`scipy.stats.lingress`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.linregress.html) and [`seaborn.lmplot`](). You can learn more about these algorithms by clicking on their names to get a link to online documentation.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "id": "8fea67ea-f287-431b-b895-174fc71940d2",
      "metadata": {
        "id": "8fea67ea-f287-431b-b895-174fc71940d2"
      },
      "outputs": [],
      "source": [
        "from scipy.stats import linregress"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "f800f6e5-54be-4420-8395-1f2a235cb829",
      "metadata": {
        "id": "f800f6e5-54be-4420-8395-1f2a235cb829"
      },
      "source": [
        "Let's fit only the control data (`drug1.conc` == 0)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "id": "9178cdf4-ea40-4404-9968-d2b4e8d8916f",
      "metadata": {
        "id": "9178cdf4-ea40-4404-9968-d2b4e8d8916f"
      },
      "outputs": [],
      "source": [
        "# dtf = data to fit\n",
        "dtf = d[d[\"drug1.conc\"]==0]\n",
        "ctrl_wells = dtf[\"well\"].unique()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "64346a18-877b-48df-ac54-5dc39d364c04",
      "metadata": {
        "id": "64346a18-877b-48df-ac54-5dc39d364c04"
      },
      "source": [
        "We will perform a list comprehension to fit data for each well independently."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "id": "0cbfeb0c-2bbd-445f-a35f-457fe69937f3",
      "metadata": {
        "id": "0cbfeb0c-2bbd-445f-a35f-457fe69937f3"
      },
      "outputs": [],
      "source": [
        "res = [linregress(dtf[dtf[\"well\"]==ctrl_wells[i]][[\"time\",\"l2\"]]) for i in np.arange(len(ctrl_wells))]"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "b35b0afe-3e3b-4b70-ae4f-dc651f50d9ca",
      "metadata": {
        "id": "b35b0afe-3e3b-4b70-ae4f-dc651f50d9ca"
      },
      "source": [
        "The `linregress` function returns a `namedtuple` of length 5. Let's look at an example output."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "id": "e5f82ff0-829a-44cb-8548-afd68b4fab4d",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "e5f82ff0-829a-44cb-8548-afd68b4fab4d",
        "outputId": "062324ad-bb90-4ea0-d02c-aa4b214f5638"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Example linregress output for well A03\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinregressResult(slope=0.060846424497371744, intercept=5.212788495165553, rvalue=0.9990947611147231, pvalue=4.776167619926461e-33, stderr=0.0005402101680293283, intercept_stderr=0.036687154857080205)"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ],
      "source": [
        "example_well = dtf[\"well\"].unique()[1]\n",
        "print(f\"Example linregress output for well {example_well}\")\n",
        "res[1]"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "4bf15674-73c4-407e-9774-4e1fd6d7ca08",
      "metadata": {
        "id": "4bf15674-73c4-407e-9774-4e1fd6d7ca08"
      },
      "source": [
        "Each value can be pulled out independently using the respective names. We will pull out all `slope` values, which represent the population doubling (proliferation) rate. To make it a bit easier to read we will also round the values to 4 decimal places."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "id": "ca448f0e-839c-4bf6-bd73-1102897d1196",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ca448f0e-839c-4bf6-bd73-1102897d1196",
        "outputId": "bac5b8ad-0f01-417a-e244-f2b1435728e4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "A02    0.0602\n",
              "A03    0.0608\n",
              "A04    0.0596\n",
              "A05    0.0421\n",
              "A06    0.0632\n",
              "A07    0.0528\n",
              "A08    0.0612\n",
              "A09    0.0515\n",
              "A10    0.0592\n",
              "A11    0.0557\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ],
      "source": [
        "prates = pd.Series(data=[np.round(r.slope,4) for r in res], index=ctrl_wells)\n",
        "prates"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "0866a88c-9647-4c9f-bc19-11cdf04e3af4",
      "metadata": {
        "id": "0866a88c-9647-4c9f-bc19-11cdf04e3af4"
      },
      "source": [
        "Most values are above 0.05 and most are close to 0.06, but one value looks low (A05: 0.0421). We can check for goodness of fit for linear regression by calculating $R^2$. (Only `rvalue` is provided, so we need to square it using `**2`.)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "id": "f286e02f-4282-431c-bd00-5782b1ec398d",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f286e02f-4282-431c-bd00-5782b1ec398d",
        "outputId": "248fdfcc-b7f2-4df9-d54d-9014d084ea72"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "A02    0.9940\n",
              "A03    0.9982\n",
              "A04    0.9916\n",
              "A05    0.8989\n",
              "A06    0.9976\n",
              "A07    0.9948\n",
              "A08    0.9951\n",
              "A09    0.9906\n",
              "A10    0.9963\n",
              "A11    0.9961\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ],
      "source": [
        "r2_vals = pd.Series(data=[np.round(r.rvalue**2,4) for r in res], index=ctrl_wells)\n",
        "r2_vals"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "56c980c4-7a5e-4584-bb46-929e993244df",
      "metadata": {
        "id": "56c980c4-7a5e-4584-bb46-929e993244df"
      },
      "source": [
        "Only well A05 has an $R^2$ value < 0.99."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "aebafc13-a5dd-4cf8-a932-e44d057a416d",
      "metadata": {
        "id": "aebafc13-a5dd-4cf8-a932-e44d057a416d"
      },
      "source": [
        "So, 9 of 10 control wells are explained well by linear models. This fits with the visual evidence that something anomalous happens to the cell counts in well A05 after ~75. This is consistent with a possible technical problem when medium is changed in the experiment @ ~ 72h.  "
      ]
    },
    {
      "cell_type": "markdown",
      "id": "14240290-81c5-4de3-bef8-274eb4338c04",
      "metadata": {
        "id": "14240290-81c5-4de3-bef8-274eb4338c04"
      },
      "source": [
        "## Assignment task #3\n",
        "Perform linear regression using the `linregress` function on the trametinib-treated wells. Describe how the proliferation rates compare to the rates of the control wells in the subsequent markdown block."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "id": "3a6d7961-96e5-4f57-aa99-9a808a3dbe27",
      "metadata": {
        "id": "3a6d7961-96e5-4f57-aa99-9a808a3dbe27"
      },
      "outputs": [],
      "source": [
        "# perform linear regression on the trametinib-treated wells\n",
        "dtf = d[d[\"drug1.conc\"]==3.9875e-06]\n",
        "drug_wells=dtf[\"well\"].unique() "
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "res = [linregress(dtf[dtf[\"well\"]==drug_wells[i]][[\"time\",\"l2\"]]) for i in np.arange(len(drug_wells))]"
      ],
      "metadata": {
        "id": "gvU-oIawIE5C"
      },
      "id": "gvU-oIawIE5C",
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "example_well = dtf[\"well\"].unique()[1]\n",
        "print(f\"Example linregress output for well {example_well}\")\n",
        "res[1]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "szbWy-hXIHE6",
        "outputId": "2c6a5804-1744-4254-f115-0d6fcbc3e5cf"
      },
      "id": "szbWy-hXIHE6",
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Example linregress output for well A12\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinregressResult(slope=0.0018027181675447268, intercept=5.804797993779366, rvalue=0.2947633020923504, pvalue=0.1526106083686435, stderr=0.001218577477198253, intercept_stderr=0.08275694027457718)"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "prates = pd.Series(data=[np.round(r.slope,4) for r in res], index=drug_wells)\n",
        "prates"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PJD_B4XdIHM6",
        "outputId": "62a67557-e6ea-4170-9ace-77059ead54dc"
      },
      "id": "PJD_B4XdIHM6",
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "A01    0.0013\n",
              "A12    0.0018\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "r2_vals = pd.Series(data=[np.round(r.rvalue**2,4) for r in res], index=drug_wells)\n",
        "r2_vals"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aC-OGYupJATV",
        "outputId": "0a5cd23b-8b75-4511-bc64-816e69f69ec8"
      },
      "id": "aC-OGYupJATV",
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "A01    0.0234\n",
              "A12    0.0869\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "markdown",
      "id": "68348d8a-9f8c-44ba-bc41-0a9548286b76",
      "metadata": {
        "id": "68348d8a-9f8c-44ba-bc41-0a9548286b76"
      },
      "source": [
        "*Describe here your comparison of the rates between trametinib-treated wells and the control wells.*\n",
        "\n",
        "> ####The trametinib-treated wells had a drastically lower R2 value(s) that the control (crl) wells. The R2 values were 0.2 and 0.9 in the trametinib well which differs from the R2 values ranging between .899 and .998 in the control-treated wells. Only A01 and A12 were the trametinib-treated wells, no not a lot of examples to compare back too.  \n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "a543b1dd-6136-4c6b-81a8-f4beec76df7c",
      "metadata": {
        "id": "a543b1dd-6136-4c6b-81a8-f4beec76df7c"
      },
      "source": [
        "We will visualize the linear model fitting using the seaborn `lmplot` function, which uses SciPy `linregress` function itself. This is a simple way to visualize the fits and their confidence intervals."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 26,
      "id": "65b0b21d-ffc3-42c7-b1d7-913d281e39ac",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 377
        },
        "id": "65b0b21d-ffc3-42c7-b1d7-913d281e39ac",
        "outputId": "84a650eb-2b9a-43c9-849c-d4a5816ebdca"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 451.65x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "p = sns.lmplot(data=d, x=\"time\", y=\"pd\", hue=\"well\")"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "dbbd32cc-aa59-4839-922f-8443c38ea42b",
      "metadata": {
        "id": "dbbd32cc-aa59-4839-922f-8443c38ea42b"
      },
      "source": [
        "We can also get fit parameter values from models fitting to all data from each condition (control or trametinib-treated)."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "id": "cdeaa57f-6ae9-4f2b-a254-08bdfbc8da22",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 352
        },
        "id": "cdeaa57f-6ae9-4f2b-a254-08bdfbc8da22",
        "outputId": "91cbd57b-24c5-40b4-f315-79fba65f7e8c"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 505.65x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "p = sns.lmplot(data=d, x=\"time\", y=\"pd\", hue=\"drug1\")"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "86f8611a-f42f-4b12-b162-f7ebd8e26466",
      "metadata": {
        "id": "86f8611a-f42f-4b12-b162-f7ebd8e26466"
      },
      "source": [
        "## Non-loglinear data\n",
        "When cells are in conditions that limit their proliferation or increase cell death, such as when contact inhibited or treated with drugs, their growth may appear nonlinear. To analyze data like this we can interpret the data using nonlinear model fitting. For this exercise we will use simulated data. "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "id": "1dd0cd18-72e6-4d70-ab38-b0bc3109352a",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "1dd0cd18-72e6-4d70-ab38-b0bc3109352a",
        "outputId": "b93f54dc-ddc1-441e-c0f6-c38d48e8d979"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   time  cell.count        pd\n",
              "0     0  108.452629  0.000000\n",
              "1     3  114.671082  0.080437\n",
              "2     6  137.605309  0.343471\n",
              "3     9  163.397796  0.591324\n",
              "4    12  178.516048  0.718989"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9a821b75-2b57-4023-8b39-bfed1cbdfcec\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>time</th>\n",
              "      <th>cell.count</th>\n",
              "      <th>pd</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>108.452629</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3</td>\n",
              "      <td>114.671082</td>\n",
              "      <td>0.080437</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6</td>\n",
              "      <td>137.605309</td>\n",
              "      <td>0.343471</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>9</td>\n",
              "      <td>163.397796</td>\n",
              "      <td>0.591324</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>12</td>\n",
              "      <td>178.516048</td>\n",
              "      <td>0.718989</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a821b75-2b57-4023-8b39-bfed1cbdfcec')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9a821b75-2b57-4023-8b39-bfed1cbdfcec button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9a821b75-2b57-4023-8b39-bfed1cbdfcec');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ],
      "source": [
        "np.random.seed(7)\n",
        "times_by3 = np.arange(0,126,3)\n",
        "mycounts = mylogistic(t=times_by3, P0=100, rate=0.06, K=1000)\n",
        "sim_data = pd.DataFrame.from_dict({\"time\":times_by3,\"cell.count\":flatten_matrix([np.random.normal(x,0.05*x,1) for x in mycounts])})\n",
        "sim_data[\"pd\"] = np.log2(sim_data[\"cell.count\"]/sim_data[\"cell.count\"][0])\n",
        "sim_data.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "id": "f9d9c4a9-903e-4ae1-9dac-7dae6b90f08d",
      "metadata": {
        "id": "f9d9c4a9-903e-4ae1-9dac-7dae6b90f08d",
        "outputId": "9a823f51-2992-47c4-d4a0-0a48af68d37a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 316
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<AxesSubplot:xlabel='time', ylabel='pd'>"
            ]
          },
          "metadata": {},
          "execution_count": 29
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "sns.scatterplot(data=sim_data, x=\"time\", y=\"pd\")"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "5725808c-f3b2-47ed-b7a8-514a63b8deb9",
      "metadata": {
        "id": "5725808c-f3b2-47ed-b7a8-514a63b8deb9"
      },
      "source": [
        "## Nonlinear model fitting with SciPy's `curve_fit` function\n",
        "Nonlinear model fitting is more complicated and there aremany ways that optimal parameter values can be found. There is an entire field of research around parameter optimization! We will use a specific method employed by SciPy (the [`scipy.optimize.curve_fit`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.curve_fit.html) function) that has the objective to minimize the sum of the squared residuals of model to data.  It returns optimized coefficient values (`popt`) and the estimated covariance of `popt`. The diagonals provide the variance of the parameter estimates. To compute one standard deviation of parameter errors, we will use `perr = np.sqrt(np.diag(pcov))`.  \n",
        "\n",
        "This approach to identify optimal parameter values is referred to as least squares regression and attempts to minimize the function \n",
        "$\\sum_i(f(x_i,\\beta)-y_i)^2$\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 30,
      "id": "112958e8-43f8-489b-b32b-234f1b34852c",
      "metadata": {
        "id": "112958e8-43f8-489b-b32b-234f1b34852c"
      },
      "outputs": [],
      "source": [
        "from scipy.optimize import curve_fit"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "46860fe6-0035-4c59-989e-a5c123672c2c",
      "metadata": {
        "id": "46860fe6-0035-4c59-989e-a5c123672c2c"
      },
      "source": [
        "The function `{0:.4g}\".format(x)` is for limiting the number of digits of the calculated values (making viewing the values easier)."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 31,
      "id": "889c0d0b-4721-438a-9017-344f56ab858c",
      "metadata": {
        "id": "889c0d0b-4721-438a-9017-344f56ab858c"
      },
      "outputs": [],
      "source": [
        "logistic_popt, logistic_pcov = curve_fit(mylogistic, sim_data[\"time\"], sim_data[\"cell.count\"])\n",
        "logistic_popt_str = [\"{0:.4g}\".format(x) for x in logistic_popt]\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "c95a0c96-8b81-4455-ac57-3b0a78a5fd7f",
      "metadata": {
        "id": "c95a0c96-8b81-4455-ac57-3b0a78a5fd7f"
      },
      "source": [
        "Printing the optimal parameter values."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 32,
      "id": "411cf5b6-294e-44fb-9627-176ba593a8be",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "411cf5b6-294e-44fb-9627-176ba593a8be",
        "outputId": "c1210058-46ef-4704-b97f-52c3107e05f7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Optimal parameter values for P0: 100.3, rate: 0.05983, and K: 994\n",
            "\n"
          ]
        }
      ],
      "source": [
        "print(f\"Optimal parameter values for P0: {logistic_popt_str[0]}, rate: {logistic_popt_str[1]}, and K: {logistic_popt_str[2]}\\n\")"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "09903214-aaff-458e-9e84-2429f5136a45",
      "metadata": {
        "id": "09903214-aaff-458e-9e84-2429f5136a45"
      },
      "source": [
        "### Plot the data and overlay the model fit\n",
        "To visualize on the plot we must convert to normalized log2 scale. We will also include a linear model fit for comparison (standard output of seaborn's `regplot`."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 33,
      "id": "2c0cd14d-55a1-4c7a-ad11-f868d49addfa",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 316
        },
        "id": "2c0cd14d-55a1-4c7a-ad11-f868d49addfa",
        "outputId": "890aa938-4e3e-42db-dea8-d55dcbc78176"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<AxesSubplot:xlabel='time', ylabel='pd'>"
            ]
          },
          "metadata": {},
          "execution_count": 33
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "x_pred = np.linspace(min(times_by3),max(times_by3),100)\n",
        "y_pred = mylogistic(x_pred, *logistic_popt)\n",
        "y_pred = np.log2(y_pred/y_pred[0])\n",
        "sns.regplot(x=\"time\", y=\"pd\", data=sim_data)\n",
        "sns.lineplot(x=x_pred, \n",
        "             y=y_pred, \n",
        "             color=\"red\")"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "f2014d0a-cbb7-4e39-9a71-cd77c70535e6",
      "metadata": {
        "id": "f2014d0a-cbb7-4e39-9a71-cd77c70535e6"
      },
      "source": [
        "Do the same for a Gompertz model."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 34,
      "id": "f57f9d8e-5782-4ec0-aa60-7115c5c86c65",
      "metadata": {
        "id": "f57f9d8e-5782-4ec0-aa60-7115c5c86c65"
      },
      "outputs": [],
      "source": [
        "gompertz_popt, gompertz_pcov = curve_fit(gompertz, sim_data[\"time\"], sim_data[\"cell.count\"])\n",
        "gompertz_popt_str = [\"{0:.4g}\".format(x) for x in gompertz_popt]\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 35,
      "id": "644dd92a-ca26-4129-aa05-4f8c2014d5df",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "644dd92a-ca26-4129-aa05-4f8c2014d5df",
        "outputId": "5197a677-cf10-4e2e-c329-ea083b18a6a8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Optimal parameter values for P0: 61.38, rate: 0.03833, and K: 1037\n",
            "\n"
          ]
        }
      ],
      "source": [
        "print(f\"Optimal parameter values for P0: {gompertz_popt_str[0]}, rate: {gompertz_popt_str[1]}, and K: {gompertz_popt_str[2]}\\n\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 36,
      "id": "59b4da50-59c3-4eb8-8445-d2c09b9a4081",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 316
        },
        "id": "59b4da50-59c3-4eb8-8445-d2c09b9a4081",
        "outputId": "4668c026-9b49-42f1-a74c-2331775297bd"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<AxesSubplot:xlabel='time', ylabel='pd'>"
            ]
          },
          "metadata": {},
          "execution_count": 36
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "x_pred = np.linspace(min(times_by3),max(times_by3),100)\n",
        "y_pred = gompertz(x_pred, *gompertz_popt)\n",
        "y_pred = np.log2(y_pred/y_pred[0])\n",
        "sns.regplot(x=\"time\", y=\"pd\", data=sim_data)\n",
        "sns.lineplot(x=x_pred, \n",
        "             y=y_pred, \n",
        "             color=\"red\")"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "5de323d7-c662-4a00-b5ae-7fe19b3074e2",
      "metadata": {
        "id": "5de323d7-c662-4a00-b5ae-7fe19b3074e2"
      },
      "source": [
        "### Limitations of these nonlinear growth models\n",
        "#### Both logistic and Gompertz models:  \n",
        "* Are phenomenological (they describe the result, not the cause)\n",
        "* Use a carrying capacity parameter ($K$); this may be relevant to space available in a culture well and/or average cell size, but how would you interpret different values in response to drug?  \n",
        "\n",
        "#### Gompertzian model:\n",
        "* Has initial assumptions that do not correspond to a stable, exponentially dividing population (infinite rate at time=0, rate is continually changing)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "411ea7d9-fcf1-44aa-92bd-4ce8fdcb1ddb",
      "metadata": {
        "id": "411ea7d9-fcf1-44aa-92bd-4ce8fdcb1ddb"
      },
      "source": [
        "## Assignment task (extra credit)\n",
        "### How many days would it take for a single tumor cell to grow to a tumor the size of an egg?\n",
        "\n",
        "\n",
        "**Assumptions:**\n",
        "* There are ~ $10^9$ tumor cells  in 1 cm$^3$ (~1 g)\n",
        "* Tumor Cell â‰ˆ 1ng\n",
        "* Egg â‰ˆ 35g\n",
        "* Average time per division (doubling time) â‰ˆ 18h\n",
        "* Doubling rate = 1/doubling time\n",
        "* Population doubling equation: $P(t) = P_02^{rate*t}$\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "4cb40054",
      "metadata": {
        "id": "4cb40054"
      },
      "source": [
        "<table>\n",
        "    <tr>\n",
        "        <td>\n",
        "        <img src=\"https://github.com/VU-CSP/quantbio-assignments/blob/main/img/cell_division.png?raw=1\" style=\"width: 150px;\" align=\"middle\" /> \n",
        "        <td>\n",
        "            $\\Longrightarrow$ $\\Longrightarrow$\n",
        "        <td>\n",
        "            <img src=\"https://github.com/VU-CSP/quantbio-assignments/blob/main/img/tumor.png?raw=1\" style=\"width: 150px;\"  align=\"middle\" />\n",
        "    </tr>\n",
        "</table>\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "c2f24f5b-7c9d-4a8a-b616-2721a4bc434c",
      "metadata": {
        "id": "c2f24f5b-7c9d-4a8a-b616-2721a4bc434c"
      },
      "source": [
        "_Try to write a function that calculates this. Start of function definition is provided in code block below._  \n",
        "NOTE: to calculate log2, use the numpy function `np.log2()`  \n",
        "NOTE: check the units!"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 37,
      "metadata": {
        "id": "Fc6GfVoQQl0_"
      },
      "outputs": [],
      "source": [
        "P0=1\n",
        "egg=35/(10**-9)\n",
        "DT=18\n",
        "def timeToEgg(P0, egg, DT):\n",
        "    '''\n",
        "    P0=initial cell number\n",
        "    egg=number of tumor cells in an egg-size tumor\n",
        "    DT=time to double the population size (i.e., the average cell cycle time)\n",
        "    '''\n",
        "    logpt=np.log2(egg) \n",
        "    logpo=np.log2(P0)\n",
        "    sublogs=logpt-logpo\n",
        "    doublerate=1/DT\n",
        "    time=sublogs/doublerate \n",
        "    timedays=time/24\n",
        "    # add your code for the function here\n",
        "    return(timedays)"
      ],
      "id": "Fc6GfVoQQl0_"
    },
    {
      "cell_type": "code",
      "execution_count": 38,
      "id": "9e33a969-ddac-42c0-b07a-80a45c04dcca",
      "metadata": {
        "id": "9e33a969-ddac-42c0-b07a-80a45c04dcca",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d17fc7f7-93ae-4cd3-d300-8573a4872863"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "26.269976903198426"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ],
      "source": [
        "timeToEgg(P0, egg, DT)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "fc218c88-2a9f-40d0-9995-1c50e4543890",
      "metadata": {
        "id": "fc218c88-2a9f-40d0-9995-1c50e4543890"
      },
      "source": [
        "### Calculate time to egg-sized tumor from 100 cells\n",
        "Do the calculation using the function you made.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 39,
      "id": "eac88800-2715-41ee-a061-953435113623",
      "metadata": {
        "id": "eac88800-2715-41ee-a061-953435113623"
      },
      "outputs": [],
      "source": [
        "# Execute your function with the correct input argument values.\n",
        "# timeToEgg(P0=100,egg=<egg_val>,DT=<DT_val>)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 40,
      "id": "6aef3847-ab37-42cd-9f62-fd6a512d36a7",
      "metadata": {
        "id": "6aef3847-ab37-42cd-9f62-fd6a512d36a7",
        "outputId": "bb7d7759-958d-4e18-8002-63092cbd43bd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "26.269976903198426"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ],
      "source": [
        "timeToEgg(P0, egg, DT)"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.11"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}